SELECT u.userid as MemberID, u.username as MemberName, r.regionid as MemberRegionID, r.regionname as MemberRegionName, f.userid as FriendID, f.username as FriendName, rr.regionid as FriendRegionID, rr.regionname as FriendRegionName FROM users u INNER JOIN updatesfr uf ON uf.memberid = u.userid INNER JOIN users f ON f.userid = uf.friendid INNER JOIN countries c ON c.countryid = u.countryid INNER JOIN countriesregions cr ON cr.countryid = c.countryid INNER JOIN regions r ON r.regionid = cr.regionid INNER JOIN countries cc ON cc.countryid = f.countryid INNER JOIN countriesregions ccr ON ccr.countryid = cc.countryid INNER JOIN regions rr ON rr.regionid = ccr.regionid ORDER BY r.regionid, rr.regionid


matrix = []
list = [1,2,3,4,5,6,7,9,11]
list.each do |r1|
	inner_matrix = []
	list.each do |r2|
		inner_matrix <<  f.select{|friendship| friendship.MemberRegionID == r1 && friendship.FriendRegionID == r2}.count
	end
	matrix << inner_matrix
end


What does this do?


-- DELETE FROM Users WHERE countryid=0;

-- users in africa
/* SELECT u.UserID, u.CountryID, r.regionid FROM users u 
		INNER JOIN countries c ON c.countryid = u.countryid 
		INNER JOIN countriesregions cr ON cr.countryid = c.countryid
		INNER JOIN regions r ON r.regionid = cr.regionid
		WHERE r.regionid=1		 */




SELECT u.UserID, u.CountryID, r.regionid FROM users u 
		INNER JOIN countries c ON c.countryid = u.countryid 
		INNER JOIN countriesregions cr ON cr.countryid = c.countryid
		INNER JOIN regions r ON r.regionid = cr.regionid;


-- listing friends
SELECT u.userid, u.username, f.userid, f.username FROM users u
	INNER JOIN updatesfr uf ON uf.memberid = u.userid
	INNER JOIN users f ON f.userid = uf.friendid
	LIMIT 100;
